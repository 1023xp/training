transmission: fix incorrect check of CXX when ccache is enabled

When ccache is enabled, the configure script is called with
CXX="/path/to/ccache /path/to/cxx". The AC_PROG_CXX correctly deals with
this, but the transmission-specific extra checks on CXX do not. It uses
AC_CHECK_PROG, which takes the first word of CXX (ccache) only.

This patch removes the seemingly unneeded extra checks, and additionally
replaces HAVE_CXX=yes/no with a direct check on CXX, as it is only used in
one place.

Signed-off-by: Thomas De Schampheleire <thomas.de.schampheleire@gmail.com>
Upstream-status: submitted: https://trac.transmissionbt.com/ticket/5612

---

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -69,15 +69,6 @@ AC_SUBST(LIBAPPINDICATOR_MINIMUM)
 
 AC_PROG_CC
 AC_PROG_CXX
-if test "x$CXX" != "x"; then # CXX is set...
-  if test -f "$CXX"; then # maybe it's an absolute path passed in env variables...
-    AC_MSG_CHECKING([for $CXX])
-    HAVE_CXX="yes"
-    AC_MSG_RESULT([$HAVE_CXX])
-  else
-    AC_CHECK_PROG([HAVE_CXX],[$CXX],[yes],[no])
-  fi
-fi
 AC_C_INLINE
 if test "x$GCC" = "xyes" ; then
 
@@ -216,7 +207,7 @@ AC_CHECK_LIB([rt],
 
 AC_MSG_CHECKING([ÂµTP])
 build_utp="no"
-if test "x$HAVE_CXX" = "xyes" ; then
+if test "x$CXX" != "x" ; then
     have_utp="yes"
 else
     have_utp="no"
